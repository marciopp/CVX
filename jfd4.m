%{
***************************************************************************
* Otimização Convexa  
* Decomposição LDLt  da Hessiana
* conforme Antoniou Cap 5
* algoritmo 5.4 - Mathews e Davies
* Marcio Pinto Pereira - julho de 2016
* Programado em Matlab R2016a 
* Licenciado sob CC-BY-SA
***************************************************************************
%}
function [l, d, h] = jfd4(h)

l=zeros(4,4);
d=zeros(4,4);

if (h(1,1) > 0),
    h00 = h(1,1);
else h00 = 1;
end;

l(1,1)=1;
if (h(1,1) <= 0) h(1,1)=h00; end;
l(2,1) = -h(2,1)/h(1,1); h(2,1)=0;
h(2,2)=h(2,2)+l(2,1)*h(1,2);
h(2,3)=h(2,3)+l(2,1)*h(1,3);
h(2,4)=h(2,4)+l(2,1)*h(1,4);

l(3,1)=-h(3,1)/h(1,1); h(3,1)=0;
h(3,2)=h(3,2)+l(3,1)*h(1,2);
h(3,3)=h(3,3)+l(3,1)*h(1,3);
h(3,4)=h(3,4)+l(3,1)*h(1,4);

l(4,1)=-h(4,1)/h(1,1); h(4,1)=0;
h(4,2)=h(4,2)+l(4,1)*h(1,2);
h(4,3)=h(4,3)+l(4,1)*h(1,3);
h(4,4)=h(4,4)+l(4,1)*h(1,4);

if ((h(2,2) > 0) & (h(2,2) < h00)), h00=h(2,2); end;

l(2,2)=1;
if (h(2,2) <= 0), h(2,2) = h00; end;
l(3,2) = -h(3,2)/h(2,2); h(3,2)=0;
h(3,3)=h(3,3)+l(3,2)*h(2,3);
h(3,4)=h(3,4)+l(3,2)*h(2,4);

l(4,2) = -h(4,2)/h(2,2); h(4,2)=0;
h(4,3)=h(4,3)+l(4,2)*h(2,3);
h(4,4)=h(4,4)+l(4,2)*h(2,4);

if ((h(3,3) > 0) & (h(3,3) < h00)), h00=h(3,3); end;

l(3,3)=1;
if (h(3,3) <= 0), h(3,3) = h00; end;
l(3,4) = -h(4,3)/h(3,3); h(4,3)=0;
h(4,4)=h(4,4)+l(4,4)*h(3,4);

l(4,4)=1;

if (h(4,4) <= 0), h(4,4) = h00; end;
for i=1:4, d(i,i)=h(i,i); end;
